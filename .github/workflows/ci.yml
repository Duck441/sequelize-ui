name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: |
          if [ ! -d node_modules ];
          then
            npm ci --loglevel warn --yes;
          else
            echo package.json and package-lock.json unchanged. Using cache.;
          fi

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run check:format

      - name: Type check
        run: npm run check:types

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:coverage
      - name: Report coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: unit

  deploy-cloudflare:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Deploy Cloudflare
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: tomjschuster/cloudflare-pages-deploy-action@v0
        with:
          account-id: '${{ secrets.CF_ACCOUNT_ID }}'
          api-key: '${{ secrets.CF_GLOBAL_APIKEY }}'
          email: '${{ secrets.CF_EMAIL }}'
          project-name: '${{ secrets.PAGES_PROJECT_NAME }}'

  deploy-firebase:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Check next build cache
        uses: actions/cache@v2
        with:
          path: .next/cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: npm run build

      - name: Deploy preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SEQUELIZE_UI_TS }}'
          projectId: sequelize-ui-ts
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Deploy live
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SEQUELIZE_UI_TS }}'
          channelId: live
          projectId: sequelize-ui-ts
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
